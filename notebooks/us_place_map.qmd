---
title: "Home price to income map"
author: "Arthur Gailes"
date: "`r Sys.Date()`"
format:
  html:
    code-fold: true
    echo: false
    warning: false
    message: false
    page-layout: full
editor_options:
  chunk_output_type: console
editor:
  render-on-save: true
---

Project Description: A national map comparing the median home price in every jurisdiction to metropolitan household income. Price to income ratios over 10 are considered exclusionary.

Source: [GitHub](https://github.com/arthurgailes/us_price_to_income)

<!-- Note: the render moves the html doc to ../docs, and that seems to take 
another 5 min after rendering. -->


```{r setup}
#| include: false
pacman::p_load(sf, dplyr, glue, scales, here, mapgl)
if (interactive()) setwd(here())
knitr::opts_knit$set(root.dir = here())
knitr::opts_chunk$set(message = FALSE, warning = FALSE)

```

```{r}
map_data_init <- st_read("data/tidy/map_data_income_avm.geojson", quiet = TRUE)

  

#| label: data-proc
labels = c(
    "Highly Inclusive: 0-2.9",
    "Inclusive: 3-4.9",
    "At-Risk: 5-9.9",
    "Exclusionary: 10-14.9",
    "Extremely Exclusionary: 15+")

color = c("#00ff00", "#a6d96a", "#ffffbf", "#fdae61", "#ff0000")

map_data <- mutate(
  map_data_init, 
  across(matches("202[23]$"), dollar),
  avm_income_ratio_category = factor(avm_income_ratio_category, levels = labels),
  tooltip = glue(
    "Price to Income Ratio: {avm_income_ratio}",
    "Home Value (2023 Place Median): {place_median_avm_2023}",
    "Household Income (CBSA, 2022 Median): {cbsa_median_income_2022}",
    "Place:{place_name}",
    "CBSA: {cbsa_name} ",
    "Source: AEI, First American, US Census",
    .sep = "<br>"
  )
)
```


### Home Values to Income

```{r}

# m <- mapboxgl(style = mapbox_style("streets"), bounds = map_data)
m <- maplibre(bounds = map_data)

# Add the main layer
m <- m |>
  add_fill_layer(
    id = "places",
    source = map_data,
    fill_color = match_expr(
      column = "avm_income_ratio_category",
      values = levels(map_data$avm_income_ratio_category),
      stops = color
    ),
    fill_opacity = 0.7,
    fill_outline_color = "black",
    popup = "tooltip",
    tooltip = "place_name"
  )


# Add other controls
m <- m |>
  add_navigation_control() |>
  add_fullscreen_control() |>
  add_scale_control() |>
  add_geocoder_control()

# Add legend
m <- m |>
  add_legend(
    "<div style='text-align: center;'>Home Value to Income Ratio
    <br>Cities and CDPs<br>
    <span style='font-size: 10pt; font-style: italic;'>Click a city to expand</span>
    </div>",
    values = unique(map_data$avm_income_ratio_category),
    colors = color,
    type = "categorical"
  )


```

```{r, results='asis'}
# Save the map as a page.
temp_file <- "product/map_income_avm.html"
htmlwidgets::saveWidget(m, temp_file, selfcontained = TRUE)

# Display the map
map_html <- paste(readLines(temp_file), collapse = "\n")
map_html <- gsub("<!DOCTYPE html>", "", map_html, fixed = TRUE)

cat(map_html)
```

